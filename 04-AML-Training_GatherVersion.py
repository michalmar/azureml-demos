#!/usr/bin/env python
# coding: utf-8

# # Gathered Notebook
# 
#  This notebook was generated by an experimental feature called "Gather". The intent is that it contains only the code and cells required to produce the same results as the cell originally selected for gathering. Please note that the Python analysis is quite conservative, so if it is unsure whether a line of code is necessary for execution, it will err on the side of including it.
# 
# **Please let us know if you are satisfied with what was gathered by [taking this survey](https://aka.ms/gathersurvey).**

# In[ ]:


import mlflow
from azureml.core import (Datastore, Dataset, Environment, Experiment, ScriptRunConfig,
                          Workspace)
ws = Workspace.from_config()


# In[ ]:


aml_compute = "aml-cluster"
aml_dset = "diabetes_multiple"
aml_experiment = "mlflow-azureml"


# In[ ]:


wtds = Dataset.get_by_name(ws, name=aml_dset)


# In[ ]:


wtds = Dataset.get_by_name(ws, name=aml_dset)


# In[ ]:


mlflow.set_experiment(aml_experiment)


# In[ ]:


experiment = Experiment(ws, aml_experiment)


# In[ ]:


from azureml.core.compute import ComputeTarget, AmlCompute
compute_target = ComputeTarget(workspace=ws, name=aml_compute)


# In[ ]:


import os
project_folder = "code/train/diabetes"
if not os.path.exists(project_folder):
    os.makedirs(project_folder)


# In[ ]:


wtds = Dataset.get_by_name(ws, name=aml_dset)


# In[ ]:


from azureml.core import Environment
from azureml.core.conda_dependencies import CondaDependencies
conda_env = Environment('conda-env')
conda_env.python.conda_dependencies = CondaDependencies.create(pip_packages=['azureml-sdk',
                                                                             'azureml-dataprep[pandas,fuse]',
                                                                             'scikit-learn==0.22.2.post1',
                                                                             'azureml-mlflow',
                                                                             'lightgbm',
                                                                            'joblib'])


# In[ ]:


from azureml.core import ScriptRunConfig
src = ScriptRunConfig(source_directory=project_folder, 
                      script='train.py', 
                      arguments =[wtds.as_named_input('data')])
src.run_config.framework = 'python'
src.run_config.environment = conda_env
src.run_config.target = compute_target.name


# In[ ]:


run = experiment.submit(config=src)

